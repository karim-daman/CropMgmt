name: 'publish'

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install frontend dependencies
        run: npm install

      - name: Get version
        id: version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        shell: bash

      - name: Build and release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        with:
          tagName: v${{ env.PACKAGE_VERSION }}
          releaseName: 'App v${{ env.PACKAGE_VERSION }}'
          releaseBody: 'See the assets to download this version and install.'
          includeUpdaterJson: true
          updaterJsonPreferNsis: true
          updaterJsonKeepUniversal: true
          releaseDraft: true
          prerelease: false

      # Create latest.json content
      - name: Create latest.json
        run: |
          echo "{
            \"version\": \"${{ env.PACKAGE_VERSION }}\",
            \"notes\": \"See the assets to download this version and install.\",
            \"pub_date\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
            \"platforms\": {
              \"windows-x86_64\": {
                \"signature\": \"\",
                \"url\": \"https://github.com/${{ github.repository }}/releases/download/v${{ env.PACKAGE_VERSION }}/${{ github.event.repository.name }}_${{ env.PACKAGE_VERSION }}_x64-setup.exe\"
              }
            }
          }" > latest.json
        shell: bash

      # Update or create Gist
      - name: Update or Create Gist
        run: |
          if [ -z "${{ secrets.GIST_ID }}" ]; then
            # Create new gist if GIST_ID is not set
            RESPONSE=$(curl -X POST \
              -H "Authorization: token ${{ secrets.GIST_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{
                \"files\": {
                  \"latest.json\": {
                    \"content\": $(cat latest.json | jq -R -s '.')
                  }
                },
                \"description\": \"Auto-updated latest.json for app updates\",
                \"public\": true
              }" \
              https://api.github.com/gists)
            echo "Created new gist. Please add the gist ID to your repository secrets as GIST_ID"
            echo "GIST_ID=$(echo $RESPONSE | jq -r '.id')"
          else
            # Update existing gist
            curl -X PATCH \
              -H "Authorization: token ${{ secrets.GIST_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{
                \"files\": {
                  \"latest.json\": {
                    \"content\": $(cat latest.json | jq -r '.')
                  }
                }
              }" \
              "https://api.github.com/gists/${{ secrets.GIST_ID }}"
          fi
        shell: bash
